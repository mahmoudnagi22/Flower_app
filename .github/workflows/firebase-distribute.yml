name: Test Firebase Authentication

on:
  push:
    branches:
      - master

jobs:
  test-firebase-auth:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Firebase CLI
        run: npm install -g firebase-tools@13.0.0

      - name: Inspect Service Account File
        run: |
          echo "Checking service account file..."
          if [ ! -f "firebase-service-account.json" ]; then
            echo "Error: Service account file not found!"
            exit 1
          fi
          
          echo "File size: $(du -h firebase-service-account.json | cut -f1)"
          echo "File permissions: $(ls -l firebase-service-account.json)"
          
          # Verify JSON structure (without revealing sensitive data)
          echo "Checking JSON structure..."
          jq -r 'keys' firebase-service-account.json || echo "Not valid JSON!"
          
          # Check if it contains the required fields
          echo "Verifying required fields..."
          jq -e '.type == "service_account"' firebase-service-account.json > /dev/null || echo "Missing or incorrect 'type' field!"
          jq -e '.project_id' firebase-service-account.json > /dev/null || echo "Missing 'project_id' field!"
          jq -e '.private_key' firebase-service-account.json > /dev/null || echo "Missing 'private_key' field!"
          jq -e '.client_email' firebase-service-account.json > /dev/null || echo "Missing 'client_email' field!"
          
          # Print project ID (safe to reveal)
          echo "Project ID: $(jq -r '.project_id' firebase-service-account.json)"
        shell: bash

      - name: Test Method 1 - Environment Variable
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/firebase-service-account.json
        run: |
          echo "METHOD 1: Using GOOGLE_APPLICATION_CREDENTIALS environment variable"
          echo "Value: $GOOGLE_APPLICATION_CREDENTIALS"
          firebase projects:list || echo "Method 1 failed"
        shell: bash
        continue-on-error: true

      - name: Test Method 2 - Use Service Account Explicitly
        run: |
          echo "METHOD 2: Using --token flag"
          export GOOGLE_APPLICATION_CREDENTIALS=${{ github.workspace }}/firebase-service-account.json
          cat firebase-service-account.json | jq -r .private_key > private_key.pem
          chmod 600 private_key.pem
          
          # Try using gcloud to generate a token
          echo "Installing gcloud..."
          sudo apt-get update && sudo apt-get install -y apt-transport-https ca-certificates gnupg curl
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
          curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
          sudo apt-get update && sudo apt-get install -y google-cloud-cli
          
          # Activate service account
          echo "Activating service account..."
          gcloud auth activate-service-account --key-file=firebase-service-account.json
          
          # Get access token
          echo "Getting access token..."
          ACCESS_TOKEN=$(gcloud auth print-access-token)
          
          # Use token with Firebase
          echo "Using token with Firebase..."
          firebase projects:list --token "$ACCESS_TOKEN" || echo "Method 2 failed"
        shell: bash
        continue-on-error: true

      - name: Test Method 3 - CI Token
        run: |
          echo "METHOD 3: Using CI token"
          # Create a minimal firebase.json if it doesn't exist
          if [ ! -f "firebase.json" ]; then
            echo '{"projects": {"default": "'$(jq -r '.project_id' firebase-service-account.json)'"}}' > firebase.json
            echo "Created firebase.json with project ID: $(jq -r '.project_id' firebase-service-account.json)"
          fi
          
          firebase use --add $(jq -r '.project_id' firebase-service-account.json) default || echo "Failed to set project"
          firebase projects:list --token "$(jq -r '.private_key' firebase-service-account.json | tr -d '\n')" || echo "Method 3 failed"
        shell: bash
        continue-on-error: true

      - name: Debug Firebase CLI Version Information
        run: |
          echo "Firebase CLI detailed info:"
          firebase --version
          which firebase
          npm list -g firebase-tools
          
          echo "Node.js version:"
          node --version
          
          echo "NPM version:"
          npm --version
          
          echo "Operating system details:"
          uname -a
          cat /etc/os-release
        shell: bash